CREATE DATABASE BIBLIOTECA;

USE BIBLIOTECA;

CREATE TABLE BIBLIOTECA
(
    ID_BIBLIOTECA   INT         NOT NULL,
    NOMBRE          VARCHAR(50) NOT NULL,
    DIRECCION       VARCHAR(50),
    FECHA_FUNDACION VARCHAR(50),
    CIUDAD          VARCHAR(50),
    PRIMARY KEY (ID_BIBLIOTECA)
);

CREATE TABLE BIBLIOTECARIO
(
    ID_BIBLIOTECARIO       INT         NOT NULL,
    ID_BIBLIOTECA          INT         NOT NULL,
    APELLIDO               VARCHAR(50) NOT NULL,
    NOMBRE                 VARCHAR(50) NOT NULL,
    FECHA_NACIMIENTO       DATE        NOT NULL,
    FECHA_INICIO_ACTIVIDAD DATE        NOT NULL,
    PRIMARY KEY (ID_BIBLIOTECARIO),
    CONSTRAINT FOREIGN KEY (ID_BIBLIOTECA) REFERENCES BIBLIOTECA (ID_BIBLIOTECA)
);

CREATE TABLE OBRA
(
    CLASIFICACION_DECIMAL INTEGER     NOT NULL,
    NOMBRE                VARCHAR(50) NOT NULL,
    AUTOR                 VARCHAR(50) NOT NULL,
    PRIMARY KEY (CLASIFICACION_DECIMAL)
);

CREATE TABLE SOCIO
(
    ID_SOCIO         INT         NOT NULL,
    APELLIDO         VARCHAR(50) NOT NULL,
    NOMBRE           VARCHAR(50) NOT NULL,
    DOMICILIO        VARCHAR(50),
    CIUDAD           VARCHAR(50),
    TELEFONO         VARCHAR(50),
    FECHA_NACIMIENTO DATE        NOT NULL,
    PRIMARY KEY (ID_SOCIO)
);

CREATE TABLE EJEMPLAR
(
    NRO_INVENTARIO        INT NOT NULL,
    ID_BIBLIOTECA         INT NOT NULL,
    CLASIFICACION_DECIMAL INT NOT NULL,
    ESTADO                VARCHAR(50),
    NRO_EJEMPLAR          INT NOT NULL,
    PRIMARY KEY (NRO_INVENTARIO),
    CONSTRAINT FOREIGN KEY (ID_BIBLIOTECA) REFERENCES BIBLIOTECA (ID_BIBLIOTECA),
    CONSTRAINT FOREIGN KEY (CLASIFICACION_DECIMAL) REFERENCES OBRA (CLASIFICACION_DECIMAL)
);

CREATE TABLE PRESTAMO
(
    ID_PRESTAMO      INT  NOT NULL,
    NRO_INVENTARIO   INT  NOT NULL,
    ID_SOCIO         INT  NOT NULL,
    ID_BIBLIOTECARIO INT  NOT NULL,
    FECHA_INICIO     DATE NOT NULL,
    FECHA_FIN        DATE NOT NULL,
    PRIMARY KEY (ID_PRESTAMO),
    CONSTRAINT FOREIGN KEY (NRO_INVENTARIO) REFERENCES EJEMPLAR (NRO_INVENTARIO),
    CONSTRAINT FOREIGN KEY (ID_SOCIO) REFERENCES SOCIO (ID_SOCIO),
    CONSTRAINT FOREIGN KEY (ID_BIBLIOTECARIO) REFERENCES BIBLIOTECARIO (ID_BIBLIOTECARIO)
);

INSERT INTO BIBLIOTECA(ID_BIBLIOTECA, NOMBRE, DIRECCION, FECHA_FUNDACION, CIUDAD)
VALUES (1, 'ELVIO MANSILLA', 'CRAJUE 324', '1994-04-10', 'CONSTINOPLA');

INSERT INTO OBRA (CLASIFICACION_DECIMAL, NOMBRE, AUTOR)
VALUES (1, 'MARCELO', 'MONSE');

INSERT INTO EJEMPLAR(NRO_INVENTARIO, ID_BIBLIOTECA, CLASIFICACION_DECIMAL, ESTADO, NRO_EJEMPLAR)
VALUES (1, 1, 1, 'BUENO', 1);

INSERT INTO EJEMPLAR(NRO_INVENTARIO, ID_BIBLIOTECA, CLASIFICACION_DECIMAL, ESTADO, NRO_EJEMPLAR)
VALUES (2, 1, 1, 'BUENO', 2);

INSERT INTO SOCIO(ID_SOCIO, APELLIDO, NOMBRE, DOMICILIO, CIUDAD, TELEFONO, FECHA_NACIMIENTO)
VALUES (1, 'GALARGA', 'EMI', 'MONTEVIDEO 3024', 'RIO NEGRO', '43953048', '1974-09-28');

INSERT INTO BIBLIOTECARIO(ID_BIBLIOTECARIO, ID_BIBLIOTECA, APELLIDO, NOMBRE, FECHA_NACIMIENTO, FECHA_INICIO_ACTIVIDAD)
VALUES (1, 1, 'SERRANO', 'AUGUSTO', '1970-07-06', '2020-04-03');

INSERT INTO BIBLIOTECARIO(ID_BIBLIOTECARIO, ID_BIBLIOTECA, APELLIDO, NOMBRE, FECHA_NACIMIENTO, FECHA_INICIO_ACTIVIDAD)
VALUES (2, 1, 'CUYINI', 'RICARDO', '1970-04-12', '2020-07-02');

INSERT INTO BIBLIOTECARIO(ID_BIBLIOTECARIO, ID_BIBLIOTECA, APELLIDO, NOMBRE, FECHA_NACIMIENTO, FECHA_INICIO_ACTIVIDAD)
VALUES (3, 1, 'PATACUN', 'ROMAN', '1970-01-22', '2015-04-20');

INSERT INTO PRESTAMO(ID_PRESTAMO, NRO_INVENTARIO, ID_SOCIO, ID_BIBLIOTECARIO, FECHA_INICIO, FECHA_FIN)
VALUES (1, 1, 1, 1, '2020-05-05', '2020-05-10');


# 1.Generar el listado completo de ejemplares, indicando su nombre de obra, autor, y en qué biblioteca se encuentra almacenado.
SELECT EJEMPLAR.NRO_EJEMPLAR,
       OBRA.NOMBRE,
       OBRA.AUTOR,
       BIBLIOTECA.NOMBRE
FROM BIBLIOTECA,
     OBRA,
     EJEMPLAR
WHERE EJEMPLAR.ID_BIBLIOTECA = BIBLIOTECA.ID_BIBLIOTECA
  AND OBRA.CLASIFICACION_DECIMAL = EJEMPLAR.CLASIFICACION_DECIMAL;

# 2.       Generar el listado completo de préstamos, indicando el nombre de la obra prestada,
# el nombre y apellido tanto del socio que lo solicitó, y el bibliotecario que la efectuó
SELECT OBRA.NOMBRE,
       SOCIO.NOMBRE,
       SOCIO.APELLIDO,
       BIBLIOTECARIO.NOMBRE,
       BIBLIOTECARIO.APELLIDO
FROM PRESTAMO,
     OBRA,
     SOCIO,
     BIBLIOTECA,
     BIBLIOTECARIO,
     EJEMPLAR
WHERE PRESTAMO.ID_BIBLIOTECARIO = BIBLIOTECARIO.ID_BIBLIOTECARIO
  AND PRESTAMO.ID_SOCIO = SOCIO.ID_SOCIO
  AND EJEMPLAR.NRO_INVENTARIO = PRESTAMO.NRO_INVENTARIO
  AND OBRA.CLASIFICACION_DECIMAL = EJEMPLAR.CLASIFICACION_DECIMAL
  AND BIBLIOTECA.ID_BIBLIOTECA = EJEMPLAR.ID_BIBLIOTECA;

# 3.       Mostrar los 2 bibliotecarios que más tiempo llevan trabajando en la red de bibliotecas, indicando su nombre y apellido, y en qué biblioteca trabajan.
SELECT BIBLIOTECARIO.NOMBRE,
       BIBLIOTECARIO.APELLIDO,
       BIBLIOTECA.NOMBRE
FROM BIBLIOTECARIO,
     BIBLIOTECA
WHERE BIBLIOTECA.ID_BIBLIOTECA = BIBLIOTECARIO.ID_BIBLIOTECA
ORDER BY (DATEDIFF(NOW(), BIBLIOTECARIO.FECHA_INICIO_ACTIVIDAD)) DESC
LIMIT 2;

# 4.       Calcular el promedio de edad de los socios registrados
SELECT AVG(DATEDIFF(NOW(), SOCIO.FECHA_NACIMIENTO) / 365)
FROM SOCIO;

# 5.       Generar el listado de bibliotecas junto con la cantidad de bibliotecarios que trabajan en ella.
SELECT BIBLIOTECA.NOMBRE, COUNT(BIBLIOTECARIO.ID_BIBLIOTECARIO)
FROM BIBLIOTECA,
     BIBLIOTECARIO
WHERE BIBLIOTECARIO.ID_BIBLIOTECA = BIBLIOTECA.ID_BIBLIOTECA;

# 6.       Mostrar el listado de obras (nombre y autor) con la cantidad de ejemplares de cada una.
SELECT OBRA.NOMBRE, OBRA.AUTOR, COUNT(EJEMPLAR.NRO_EJEMPLAR)
FROM OBRA,
     EJEMPLAR
WHERE OBRA.CLASIFICACION_DECIMAL = EJEMPLAR.CLASIFICACION_DECIMAL;

# 7.       Generar el listado de obras con la cantidad de préstamos que en la que aparece
SELECT OBRA.CLASIFICACION_DECIMAL,
       OBRA.NOMBRE,
       OBRA.AUTOR,
       COUNT(EJEMPLAR.NRO_EJEMPLAR)
FROM OBRA,
     PRESTAMO,
     EJEMPLAR
WHERE EJEMPLAR.CLASIFICACION_DECIMAL = OBRA.CLASIFICACION_DECIMAL;

